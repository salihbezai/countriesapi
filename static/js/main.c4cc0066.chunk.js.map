{"version":3,"sources":["styles/Header.styled.js","styles/Main.styled.js","Components/Header.js","styles/CountryBox.styled.js","Components/CountryBox.js","Components/Countries.js","Components/Main.js","Redux/Actions/countriesActions.js","styles/App.style.js","App.js","Redux/Reducers/countries.js","Redux/Store.js","index.js"],"names":["Nav","styled","nav","theme","backgroundColors","header","Container","div","Search_Filter","Countries_grid","Header","Box","box","CountryInfo","CountryBox","country","src","flag","width","height","name","population","region","capital","Countries","data","length","map","index","mapDispatchToProps","fetchCountries","dispatch","getstate","fetch","then","response","json","type","payload","catch","err","console","log","connect","state","countries","props","useState","setcountriesData","searchWord","setSearchWord","test","setTest","useEffect","placeholder","onChange","event","target","value","filtered","filter","toLowerCase","indexOf","class","selected","disabled","Body","body","App","initialState","reducers","thunk","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4cc0066.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nexport const Nav = styled.nav`\r\n    background-color: ${({ theme })=>theme.backgroundColors.header};\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 66px;\r\n    padding: 0 58px;\r\n    h1{\r\n\r\n    }\r\n    button {\r\n        border: none;\r\n        background-color: #fff;\r\n        cursor: pointer;\r\n        display:flex;\r\n        align-items:center;\r\n        span{\r\n            padding-left: 3px;\r\n        }\r\n    }\r\n`","import styled from 'styled-components'\r\n\r\n\r\nexport const Container = styled.div`\r\n    padding: 0px 63px;\r\n`\r\n\r\nexport const Search_Filter = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    margin:36px 0px;\r\n    input {\r\n    border-radius: 5px;\r\n    border: 1px solid transparent;\r\n    height: 35px;\r\n    width: 357px;\r\n    padding: 5px 46px;\r\n    box-shadow: 0px 0px 4px black;\r\n    }\r\n    select {\r\n        border-radius: 5px;\r\n        height: 35px;\r\n        width: 135px;\r\n        cursor: pointer;\r\n        border: 1px solid transparent;\r\n        box-shadow: 0px 0px 2px black;\r\n    }\r\n    select:focus{\r\n        outline: none;\r\n    }\r\n    input:focus{\r\n        outline: none;\r\n    }\r\n    i {\r\n        position: absolute;\r\n        left: 77px;\r\n        color:grey;\r\n    }\r\n`\r\n\r\nexport const Countries_grid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(4,1fr);\r\n    gap: 15px;\r\n`","import React from 'react'\r\nimport { Nav } from '../styles/Header.styled'\r\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\r\nimport { Container } from '../styles/Main.styled';\r\nconst Header=()=> {\r\n    return (\r\n    <Nav>\r\n        <h1>Where in the world</h1>\r\n        <button>\r\n            <DarkModeOutlinedIcon/>\r\n            <span>Dark Mode</span>\r\n        </button>\r\n    </Nav>\r\n    )\r\n}\r\nexport default Header","import styled from 'styled-components'\r\n\r\nexport const Box = styled.div`\r\n    height: 100%;\r\n    background-color: ${({ theme })=>theme.backgroundColors.box};\r\n    width: 100%;\r\n    h3 {\r\n        padding: 10px 10px;\r\n    }\r\n    `\r\nexport const CountryInfo = styled.div`\r\n    padding: 10px 10px;\r\n    div{\r\n        padding: 3px 0px;\r\n    }\r\n`","import React from 'react'\r\nimport { Box, CountryInfo } from '../styles/CountryBox.styled';\r\n\r\nconst CountryBox=({ country })=> {\r\n    \r\n    return (\r\n        <Box>\r\n            <img src={country.flag} width='100%' height='165px' />\r\n            <h3>{country.name}</h3>\r\n            <CountryInfo>\r\n                <div>Population: {country.population}</div>\r\n                <div>Region: {country.region}</div>\r\n                <div>Capital: {country.capital}</div>\r\n            </CountryInfo>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CountryBox;","import React from 'react'\r\nimport CountryBox from './CountryBox'\r\nimport { Countries_grid } from '../styles/Main.styled'\r\n\r\nconst Countries=({ data })=> {\r\n    return (\r\n        <Countries_grid>\r\n        {\r\n            data.length ? (data.map((country,index)=>{\r\n                return(\r\n                    <CountryBox country={country} key={index}/>\r\n                )\r\n            })\r\n            ):(\r\n                <p>Loading ...</p>\r\n            )\r\n        }\r\n    </Countries_grid>\r\n    )\r\n}\r\n\r\nexport default Countries;","import React,{ useState,useEffect } from 'react'\r\nimport { Container, Search_Filter } from '../styles/Main.styled'\r\nimport Countries from './Countries'\r\nimport { fetchCountries } from '../Redux/Actions/countriesActions';\r\nimport { connect } from 'react-redux';\r\nconst Main=(props)=> {\r\n  const { countries } = props;\r\n  const [countriesData, setcountriesData] = useState(countries ? countries : [])\r\n  const [ searchWord, setSearchWord ] = useState('')\r\n  const [ test, setTest ] = useState([{name:'salih'},{name:'samir'},{name:'safir'}])\r\n   useEffect(() => {\r\n    props.fetchCountries()\r\n   }, [])\r\n  \r\n   \r\n   // trigger when countries state changed\r\n   // and set new data to countriesData component state\r\n   useEffect(()=>{\r\n     setcountriesData(countries)\r\n      \r\n   },[countries])   \r\n   \r\n   // get the searched word\r\n   const getSearchedWord=(event)=>{\r\n    setSearchWord(event.target.value)\r\n    \r\n\r\n\r\n    const filtered = test.filter((data,)=>(\r\n      data.name.toLowerCase().indexOf(searchWord.toLowerCase()) !== -1\r\n    ))\r\n    console.log(filtered)\r\n    setTest(filtered)\r\n    setcountriesData(filtered)\r\n    console.log(searchWord)\r\n   }\r\n   \r\n    return (\r\n        <Container>\r\n          <Search_Filter>\r\n            <input type='text' placeholder='Search for Country...' onChange={getSearchedWord}/>\r\n            <i class=\"fa fa-search icon\"></i>\r\n\r\n            <select>\r\n                <option selected disabled>Filter by Region</option>\r\n                <option>Africa</option>\r\n                <option>Europe</option>\r\n                <option>Asia</option>\r\n                <option>Americas</option>\r\n                <option>Oceania</option>\r\n            </select>\r\n          </Search_Filter>  \r\n        \r\n        <Countries data={test}/>\r\n        </Container>\r\n    )\r\n}\r\nconst mapStateToProps = (state)=>{\r\n  return{\r\n    countries:state.countries.countries\r\n  }\r\n}\r\nconst mapDispatchToProps={\r\n  fetchCountries\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Main)","\r\nexport const fetchCountries = ()=>{\r\n    return(dispatch,getstate)=>{\r\n        fetch('https://restcountries.com/v2/all')\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n          dispatch({ type:'getCountries',payload:data})\r\n        })\r\n        .catch(err=>{\r\n          console.log(err)\r\n        })\r\n    }\r\n}","import styled from 'styled-components'\r\n\r\nexport const Body = styled.div`\r\n    background-color: ${({theme})=>theme.backgroundColors.body};\r\n`","import { useEffect } from \"react\"\nimport { ThemeProvider } from \"styled-components\";\nimport './App.css'\nimport Header from \"./Components/Header\";\nimport Main from \"./Components/Main\";\nimport { Body } from \"./styles/App.style\";\nconst  App=()=> {\n\n  const theme = {\n    backgroundColors:{\n      header:'#fff',\n      body:'hsl(0, 0%, 98%)',\n      box:'#fff'\n    }\n  }\n\n  return (\n    <ThemeProvider theme={ theme }>\n    <Body>\n      <Header/>\n      <Main/>\n    </Body>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n\n// useEffect(() => {\n//   fetch('https://restcountries.com/v2/all')\n//   .then(res=>res.json())\n//   .then(data=>{\n//     console.log(data)\n//   }).catch(error=>{\n//     console.log(error)\n//   })\n// }, [])","\r\nconst initialState = {\r\n    countries:[]\r\n}\r\nexport const countriesReducer = (state = initialState,action)=>{\r\n    switch(action.type){\r\n        case  'getCountries':\r\n            return {\r\n                ...state,\r\n                countries:action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport thunk from 'redux-thunk' \r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { countriesReducer } from './Reducers/countries';\r\n\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n// reducers\r\nconst reducers = combineReducers( {\r\n    countries:countriesReducer\r\n} )\r\n// store\r\n const store = createStore(\r\n    reducers,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './Redux/Store'\nimport { Provider } from 'react-redux'\nReactDOM.render(\n  <Provider store = { store }>\n    <App />\n  </Provider>\n  ,document.getElementById('root')\n);"],"sourceRoot":""}